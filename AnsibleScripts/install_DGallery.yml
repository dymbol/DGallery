---
- name: DGallery install playbook
  hosts: DGallery
  remote_user: "{{run_user}}"
  become: yes
  become_method: sudo
  vars:
    albums_dir: "/home/dymbol/DGallery_albums"
    DGallery_dir: "/home/dymbol/DGallery"
    run_user: "dymbol"
    run_group: "dymbol"

  tasks:
    #for ffmpeg
    - name: install the rpmfusion repo packages
      dnf: name={{ item }}
        state=present
      with_items:
        - http://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ ansible_distribution_major_version }}.noarch.rpm
        - http://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-{{ ansible_distribution_major_version }}.noarch.rpm

    - name: Install required packages
      dnf:
        name: "{{ item }}"
        state: present
      with_items:
        - jbigkit-libs
        - lcms2
        - lcms2-devel
        - libimagequant
        - libjpeg-turbo
        - libjpeg-turbo-devel
        - libtiff
        - libtiff-devel
        - libwebp
        - openjpeg2
        - openjpeg2-devel
        - python2-olefile
        - zlib
        - zlib-devel
        - gcc
        - redhat-rpm-config
        - python2-devel
        - ffmpeg
      when: ansible_distribution == "Fedora" and ansible_distribution_major_version > '25'
      
    - name: Install required packages
      dnf:
        name: "{{ item }}"
        state: present
      with_items:
        - libjpeg-dev
        - python2-devel 
        - gcc
      when: ansible_distribution == "Debian"


    - name: Disabling SELINUX
      selinux:
        state: disabled

    - name: disable firewalld
      systemd:
        name: firewalld
        enabled: no
        state: stopped

    - name: Send compressed code
      copy:
        src: /tmp/DGallery_code.tgz
        dest: /tmp/DGallery_code.tgz
        owner: "{{run_user}}"
        group: "{{run_group}}"
        mode: 0644

    - name: Creates DGallery directory
      file: path="{{ DGallery_dir }}" state=directory

    - name: Extract archive
      unarchive:
        src: /tmp/DGallery_code.tgz
        dest: "{{ DGallery_dir }}"
        owner: "{{run_user}}"
        group: "{{run_group}}"

    - name: Configure DGallery
      template:
        src: templates/settings.j2
        dest: "{{ DGallery_dir }}/DymbolGallery/DymbolGallery/settings.py"

    - name: Creates albums directory
      file: path="{{ albums_dir }}" state=directory
      owner: "{{run_user}}"
      group: "{{run_group}}"

    - name: install Python requierments
      command: 'pip install -r "{{ DGallery_dir }}"/DymbolGallery/requirements.txt'
      become_method: sudo
